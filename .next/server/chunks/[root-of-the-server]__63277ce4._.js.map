{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 106, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Ashton%20Medina/OneDrive/Ash%20FIles/Coding/SaaS-Starter-Ash-main/lib/supabase.ts"],"sourcesContent":["// lib/supabase.ts\nimport { createBrowserClient, createServerClient } from '@supabase/ssr'\n\n// Client-side Supabase client\nexport const supabase = createBrowserClient(\n  process.env.NEXT_PUBLIC_SUPABASE_URL!,\n  process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\n)\n\n// Server-side Supabase client\nexport const createClient = async () => {\n  // Import cookies only when this function is called (server-side)\n  const { cookies } = require('next/headers')\n  const cookieStore = await cookies()\n\n  return createServerClient(\n    process.env.NEXT_PUBLIC_SUPABASE_URL!,\n    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!,\n    {\n      cookies: {\n        getAll() {\n          return cookieStore.getAll()\n        },\n        setAll(cookiesToSet: { name: string; value: string; options?: any }[]) {\n          try {\n            cookiesToSet.forEach(({ name, value, options }) =>\n              cookieStore.set(name, value, options)\n            )\n          } catch {\n            // The `setAll` method was called from a Server Component.\n            // This can be ignored if you have middleware refreshing\n            // user sessions.\n          }\n        },\n      },\n    }\n  )\n}\n"],"names":[],"mappings":"AAAA,kBAAkB;;;;;AAClB;AAAA;AAAA;;AAGO,MAAM,WAAW,CAAA,GAAA,yRAAA,CAAA,sBAAmB,AAAD;AAMnC,MAAM,eAAe;IAC1B,iEAAiE;IACjE,MAAM,EAAE,OAAO,EAAE;IACjB,MAAM,cAAc,MAAM;IAE1B,OAAO,CAAA,GAAA,wRAAA,CAAA,qBAAkB,AAAD,sUAGtB;QACE,SAAS;YACP;gBACE,OAAO,YAAY,MAAM;YAC3B;YACA,QAAO,YAA8D;gBACnE,IAAI;oBACF,aAAa,OAAO,CAAC,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,GAC5C,YAAY,GAAG,CAAC,MAAM,OAAO;gBAEjC,EAAE,OAAM;gBACN,0DAA0D;gBAC1D,wDAAwD;gBACxD,iBAAiB;gBACnB;YACF;QACF;IACF;AAEJ","debugId":null}},
    {"offset": {"line": 141, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Ashton%20Medina/OneDrive/Ash%20FIles/Coding/SaaS-Starter-Ash-main/lib/auth/session.ts"],"sourcesContent":["import { createClient } from '@/lib/supabase';\nimport { User } from '@supabase/supabase-js';\n\nexport async function getSession() {\n  const supabase = await createClient();\n  const { data: { session }, error } = await supabase.auth.getSession();\n  \n  if (error || !session) {\n    return null;\n  }\n  \n  return session;\n}\n\nexport async function getUser(): Promise<User | null> {\n  const session = await getSession();\n  return session?.user || null;\n}\n\nexport async function signOut() {\n  const supabase = await createClient();\n  await supabase.auth.signOut();\n}\n\nexport async function signInWithEmail(email: string, password: string) {\n  const supabase = await createClient();\n  const { data, error } = await supabase.auth.signInWithPassword({\n    email,\n    password,\n  });\n  \n  return { data, error };\n}\n\nexport async function signUpWithEmail(email: string, password: string) {\n  const supabase = await createClient();\n  const { data, error } = await supabase.auth.signUp({\n    email,\n    password,\n  });\n  \n  return { data, error };\n}\n\nexport async function resetPassword(email: string) {\n  const supabase = await createClient();\n  const { data, error } = await supabase.auth.resetPasswordForEmail(email, {\n    redirectTo: `${process.env.BASE_URL}/auth/reset-password`,\n  });\n  \n  return { data, error };\n}\n\nexport async function updatePassword(password: string) {\n  const supabase = await createClient();\n  const { data, error } = await supabase.auth.updateUser({\n    password,\n  });\n  \n  return { data, error };\n}\n"],"names":[],"mappings":";;;;;;;;;AAAA;;AAGO,eAAe;IACpB,MAAM,WAAW,MAAM,CAAA,GAAA,iHAAA,CAAA,eAAY,AAAD;IAClC,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,EAAE,KAAK,EAAE,GAAG,MAAM,SAAS,IAAI,CAAC,UAAU;IAEnE,IAAI,SAAS,CAAC,SAAS;QACrB,OAAO;IACT;IAEA,OAAO;AACT;AAEO,eAAe;IACpB,MAAM,UAAU,MAAM;IACtB,OAAO,SAAS,QAAQ;AAC1B;AAEO,eAAe;IACpB,MAAM,WAAW,MAAM,CAAA,GAAA,iHAAA,CAAA,eAAY,AAAD;IAClC,MAAM,SAAS,IAAI,CAAC,OAAO;AAC7B;AAEO,eAAe,gBAAgB,KAAa,EAAE,QAAgB;IACnE,MAAM,WAAW,MAAM,CAAA,GAAA,iHAAA,CAAA,eAAY,AAAD;IAClC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,SAAS,IAAI,CAAC,kBAAkB,CAAC;QAC7D;QACA;IACF;IAEA,OAAO;QAAE;QAAM;IAAM;AACvB;AAEO,eAAe,gBAAgB,KAAa,EAAE,QAAgB;IACnE,MAAM,WAAW,MAAM,CAAA,GAAA,iHAAA,CAAA,eAAY,AAAD;IAClC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,SAAS,IAAI,CAAC,MAAM,CAAC;QACjD;QACA;IACF;IAEA,OAAO;QAAE;QAAM;IAAM;AACvB;AAEO,eAAe,cAAc,KAAa;IAC/C,MAAM,WAAW,MAAM,CAAA,GAAA,iHAAA,CAAA,eAAY,AAAD;IAClC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,SAAS,IAAI,CAAC,qBAAqB,CAAC,OAAO;QACvE,YAAY,GAAG,QAAQ,GAAG,CAAC,QAAQ,CAAC,oBAAoB,CAAC;IAC3D;IAEA,OAAO;QAAE;QAAM;IAAM;AACvB;AAEO,eAAe,eAAe,QAAgB;IACnD,MAAM,WAAW,MAAM,CAAA,GAAA,iHAAA,CAAA,eAAY,AAAD;IAClC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,SAAS,IAAI,CAAC,UAAU,CAAC;QACrD;IACF;IAEA,OAAO;QAAE;QAAM;IAAM;AACvB","debugId":null}},
    {"offset": {"line": 214, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Ashton%20Medina/OneDrive/Ash%20FIles/Coding/SaaS-Starter-Ash-main/app/api/user/route.ts"],"sourcesContent":["import { getUser } from '@/lib/auth/session';\n\nexport async function GET() {\n  const user = await getUser();\n  return Response.json(user);\n}\n"],"names":[],"mappings":";;;AAAA;;AAEO,eAAe;IACpB,MAAM,OAAO,MAAM,CAAA,GAAA,wHAAA,CAAA,UAAO,AAAD;IACzB,OAAO,SAAS,IAAI,CAAC;AACvB","debugId":null}}]
}